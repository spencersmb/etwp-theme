/* ----------------------------------------------------------------------------
 * Mixins
 * ------------------------------------------------------------------------- */

// @mixin font-size($size) {
//   font-size: $size;
//   font-size: calculate-rem($size);
// }

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin line-height($sizeValue: 1.6) {
  line-height: ($sizeValue * 10) + px;
  line-height: $sizeValue + rem;
}

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

/*
 * Mixin for clearfix
 * @include clearfix;
*/
@mixin clearfix {
  &::before,
	&::after {
    content: ' ';
    display: table;
  }

  &::after {
    clear: both;
  }
}


/*
 * @font-face mixin
 * Bulletproof font-face via Font Squirrel
 * @include fontface('family', 'assets/fonts/', 'myfontname');
 */
@mixin fontface($font-family, $font-url, $font-name) {
  @font-face {
    font: {
      family: $font-family;
      style: normal;
      weight: normal;
    }

    src: url($font-url + '/' + $font-name + '.eot');
    src: url($font-url + '/' + $font-name + '.eot#iefix') format('embedded-opentype'),
			 url($font-url + '/' + $font-name + '.woff') format('woff'),
			 url($font-url + '/' + $font-name + '.ttf')  format('truetype'),
			 url($font-url + '/' + $font-name + '.svg#' + $font-name) format('svg');
  }
}


/**
 * IMAGE RETINA
 * @include image-2x(/img/image.png, 100%, auto);
 */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

/**
 * CENTER OBJECT
 * mixin from codyhouse.co
 */
@mixin center($xy:xy) {
  @if $xy == xy {
    bottom: auto;
    left: 50%;
    right: auto;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  } @else if $xy == x {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  } @else if $xy == y {
    bottom: auto;
    top: 50%;
    transform: translateY(-50%);
  }
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin animation--fadedown($delay) {
  // Apply the fadeIn keyframes. Each animation
  // will take 0.3s and have an ease-in-out
  @include animation(fadeIn .3s ease-in-out);
  // This animation should only play once
  @include animation-iteration-count(1);
  // Make sure the element maintains it's
  // final visual state (i.e. 100% opacity)
  @include animation-fill-mode(forwards);
  // Delay - don't start the animation until we say so
  @include animation-delay(#{$delay}s);
}

// Bem selectors

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

//modifier
@mixin m($modifier) {
  &.#{$modifier} {
    @content;
  }
}


/* ----------------------------------------------------------------------------
 * Breakpoints
 *

 * ------------------------------------------------------------------------- */
@mixin breakpoint($point) {
  @if $point == desktopXL {
    @media only screen and (min-width: 1600px) {
      @content;
    }
  } @else if $point == desktop {
    // Extra large. Above 75em (1200px)
    @media only screen and (min-width: $desktop) {
      @content;
    }
  } @else if $point == laptop {
    // Large. Above 62em (992px)
    @media only screen and (min-width: $laptop) {
      @content;
    }
  } @else if $point == tablet {
    // Medium. Above 48em (768px)
    @media only screen and (min-width: $tablet) {
      @content;
    }
  } @else if $point == mobile {
    // Small. Above 34em (544px)
    @media (min-width: $mobile) {
      @content;
    }
  } @else if $point == laptop-rd {
    // Medium.max width 1024
    @media only screen and (min-width: 1025px) {
      @content;
    }
  } @else if $point == rd-mobile-v-max {
    // Medium.max width 1024
    @media only screen and (max-width: 480px) {
      @content;
    }
  }@else if $point == rd-mobile-h-max {
    // Medium.max width 1024
    @media only screen and (max-width: 600px) {
      @content;
    }
  } @else if $point == rd-tablet-max {
    // Medium.max width 1024
    @media only screen and (max-width: 768px) {
      @content;
    }
  } @else if $point == rd-laptop-max {
    // Medium.max width 1024
    @media only screen and (max-width: 1024px) {
      @content;
    }
  } @else if $point == rd-desktop-max {
    // Medium.max width 1024
    @media only screen and (max-width: 1200px) {
      @content;
    }
  } @else if $point == rd-desktopXL{
    // Medium.max width 1024
    @media only screen and (min-width: 1300px) {
      @content;
    }
  }
}
